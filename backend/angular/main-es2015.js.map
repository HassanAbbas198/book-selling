{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/angular-material.module.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth-interceptor.ts","./src/app/auth/auth.guard.ts","./src/app/auth/auth.service.ts","./src/app/error-interceptor.ts","./src/app/error/error.component.ts","./src/app/error/error.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/not-found/not-found.component.ts","./src/app/not-found/not-found.component.html","./src/app/posts/post-create/mime-type.validator.ts","./src/app/posts/post-create/post-create.component.ts","./src/app/posts/post-create/post-create.component.html","./src/app/posts/post-details/post-details.component.ts","./src/app/posts/post-details/post-details.component.html","./src/app/posts/post-list/post-list.component.ts","./src/app/posts/post-list/post-list.component.html","./src/app/posts/post.service.ts","./src/app/posts/posts.module.ts","./src/app/search/search.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatCardModule } from \"@angular/material/card\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\r\nimport { MatExpansionModule } from \"@angular/material/expansion\";\r\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\r\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\r\nimport { MatMenuModule } from \"@angular/material/menu\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { MatTabsModule } from \"@angular/material/tabs\";\r\nimport { MatRadioModule } from \"@angular/material/radio\";\r\nimport { MatDividerModule } from \"@angular/material/divider\";\r\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\r\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\r\n\r\n@NgModule({\r\n  exports: [\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatExpansionModule,\r\n    MatProgressSpinnerModule,\r\n    MatPaginatorModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatTabsModule,\r\n    MatRadioModule,\r\n    MatDividerModule,\r\n    MatTooltipModule,\r\n    MatSnackBarModule,\r\n  ],\r\n})\r\nexport class AngularMaterialModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\nimport { AuthGuard } from \"./auth/auth.guard\";\r\nimport { AuthModule } from \"./auth/auth.module\";\r\n\r\nimport { PostListComponent } from \"./posts/post-list/post-list.component\";\r\nimport { PostCreateComponent } from \"./posts/post-create/post-create.component\";\r\nimport { PostDetailsComponent } from \"./posts/post-details/post-details.component\";\r\nimport { NotFoundComponent } from \"./not-found/not-found.component\";\r\n\r\nconst routes: Routes = [\r\n  { path: \"\", component: PostListComponent },\r\n  { path: \"create\", component: PostCreateComponent, canActivate: [AuthGuard] },\r\n  {\r\n    path: \"edit/:postId\",\r\n    component: PostCreateComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: \"post-details/:postId\",\r\n    component: PostDetailsComponent,\r\n  },\r\n  {\r\n    path: \"favorites\",\r\n    component: PostListComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: \"auth\",\r\n    loadChildren: () =>\r\n      import(\"./auth/auth.module\").then((module) => module.AuthModule),\r\n  },\r\n  {\r\n    path: \"**\",\r\n    component: NotFoundComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n  providers: [AuthGuard],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { AuthService } from \"./auth/auth.service\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"],\n})\nexport class AppComponent implements OnInit {\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {\n    this.authService.autoAuthUser();\n  }\n}\n","<app-header></app-header>\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\nimport { AngularMaterialModule } from \"./angular-material.module\";\nimport { PostsModule } from \"./posts/posts.module\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { AppRoutingModule } from \"./app-routing.module\";\n\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { AppComponent } from \"./app.component\";\nimport { HeaderComponent } from \"./header/header.component\";\nimport { ErrorComponent } from \"./error/error.component\";\n\nimport { AuthInterceptor } from \"./auth/auth-interceptor\";\nimport { ErrorInterceptor } from \"./error-interceptor\";\nimport { NotFoundComponent } from \"./not-found/not-found.component\";\nimport { FormsModule } from \"@angular/forms\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    ErrorComponent,\n    NotFoundComponent,\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AngularMaterialModule,\n    PostsModule,\n    FormsModule,\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [ErrorComponent],\n})\nexport class AppModule {}\n","import {\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpHandler,\r\n} from \"@angular/common/http\";\r\n\r\nimport { AuthService } from \"./auth.service\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private authService: AuthService) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    const authToken = this.authService.getToken();\r\n    // overriding the authorization header in my request and cloning the updated req to authRequest\r\n    const authRequest = req.clone({\r\n      headers: req.headers.set(\"Authorization\", \"Bearer \" + authToken),\r\n    });\r\n    return next.handle(authRequest);\r\n  }\r\n}\r\n","import { CanActivate, Router } from \"@angular/router\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\nimport { AuthService } from \"./auth.service\";\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(public authService: AuthService, private router: Router) {}\r\n\r\n  canActivate(\r\n    route: import(\"@angular/router\").ActivatedRouteSnapshot,\r\n    state: import(\"@angular/router\").RouterStateSnapshot\r\n  ):\r\n    | boolean\r\n    | import(\"@angular/router\").UrlTree\r\n    | import(\"rxjs\").Observable<boolean | import(\"@angular/router\").UrlTree>\r\n    | Promise<boolean | import(\"@angular/router\").UrlTree> {\r\n    const isAuth = this.authService.getIsAuth();\r\n    if (!isAuth) {\r\n      this.router.navigate([\"/login\"]);\r\n    }\r\n    return isAuth;\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Router } from \"@angular/router\";\r\n\r\nimport { Subject } from \"rxjs\";\r\n\r\nimport { AuthData } from \"./auth-data.model\";\r\nimport { environment } from \"../../environments/environment\";\r\n\r\nconst BACKEND_URL = environment.apiUrl + \"/users/\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AuthService {\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  private token: string;\r\n  private isAuthenticated = false;\r\n  private userId: string;\r\n\r\n  private authStatusListener = new Subject<boolean>();\r\n  private tokenTimer: any;\r\n  getToken() {\r\n    return this.token;\r\n  }\r\n\r\n  getUserId() {\r\n    return this.userId;\r\n  }\r\n\r\n  getIsAuth() {\r\n    return this.isAuthenticated;\r\n  }\r\n\r\n  getAuthStatusListener() {\r\n    return this.authStatusListener.asObservable();\r\n  }\r\n\r\n  createUser(name: string, email: string, password: string, confirmPassword) {\r\n    const authData: AuthData = {\r\n      name: name,\r\n      email: email,\r\n      password: password,\r\n      confirmPassword: confirmPassword,\r\n    };\r\n    this.http.post(BACKEND_URL + \"/signup\", authData).subscribe(\r\n      () => {\r\n        this.router.navigate([\"/auth/login\"]);\r\n      },\r\n      (error) => {\r\n        this.authStatusListener.next(false);\r\n      }\r\n    );\r\n  }\r\n\r\n  login(name: string, email: string, password: string, confirmPassword) {\r\n    const authData: AuthData = {\r\n      name: name,\r\n      email: email,\r\n      password: password,\r\n      confirmPassword: confirmPassword,\r\n    };\r\n    this.http\r\n      .post<{ token: string; expiresIn: number; userId: string }>(\r\n        BACKEND_URL + \"/login\",\r\n        authData\r\n      )\r\n      .subscribe(\r\n        (response) => {\r\n          const token = response.token;\r\n          this.token = token;\r\n          if (token) {\r\n            const expiresInDuration = response.expiresIn;\r\n            this.setAuthTimer(expiresInDuration);\r\n            this.userId = response.userId;\r\n            this.isAuthenticated = true;\r\n            this.authStatusListener.next(true);\r\n            const now = new Date();\r\n            const expirationDate = new Date(\r\n              now.getTime() + expiresInDuration * 1000\r\n            );\r\n            this.saveAuthData(token, expirationDate, this.userId);\r\n            this.router.navigate([\"/\"]);\r\n          }\r\n        },\r\n        (error) => {\r\n          this.authStatusListener.next(false);\r\n        }\r\n      );\r\n  }\r\n\r\n  resetPassword(email: string) {\r\n    const data = {\r\n      email: email,\r\n    };\r\n    this.http\r\n      .post<{ status: string }>(BACKEND_URL + \"/resetPassword\", data)\r\n      .subscribe((response) => {\r\n        this.router.navigate([\"/\"]);\r\n      });\r\n  }\r\n\r\n  newPassword(userId: string, password: string, confirmPassword: string) {\r\n    const data = {\r\n      userId: userId,\r\n      password: password,\r\n      confirmPassword: confirmPassword,\r\n    };\r\n    this.http\r\n      .post<{ status: string }>(BACKEND_URL + \"/newPassword/\" + userId, data)\r\n      .subscribe(\r\n        (response) => {\r\n          this.router.navigate([\"/auth/login\"]);\r\n        },\r\n        (error) => {\r\n          this.authStatusListener.next(false);\r\n        }\r\n      );\r\n  }\r\n\r\n  autoAuthUser() {\r\n    const authInformation = this.getAuthData();\r\n    if (!authInformation) {\r\n      return;\r\n    }\r\n    const now = new Date();\r\n    const expiresIn = authInformation.expirationDate.getTime() - now.getTime();\r\n    if (expiresIn > 0) {\r\n      this.token = authInformation.token;\r\n      this.userId = authInformation.userId;\r\n      this.isAuthenticated = true;\r\n\r\n      this.setAuthTimer(expiresIn / 1000);\r\n      this.authStatusListener.next(true);\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    this.token = null;\r\n    this.isAuthenticated = false;\r\n    this.authStatusListener.next(false);\r\n    this.userId = null;\r\n    clearTimeout(this.tokenTimer);\r\n    this.clearAuthData();\r\n    this.router.navigate([\"/\"]);\r\n  }\r\n\r\n  private setAuthTimer(duration: number) {\r\n    this.tokenTimer = setTimeout(function () {\r\n      this.logout();\r\n    }, duration);\r\n  }\r\n\r\n  // storing our data on the local storage(managed by the browser). so reloading wont affect the token\r\n  private saveAuthData(token: string, expiration: Date, userId: string) {\r\n    localStorage.setItem(\"token\", token);\r\n    localStorage.setItem(\"expiration\", expiration.toISOString());\r\n    localStorage.setItem(\"userId\", userId);\r\n  }\r\n\r\n  // clearing the saved data on the local storage\r\n  private clearAuthData() {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"expiration\");\r\n    localStorage.removeItem(\"userId\");\r\n  }\r\n\r\n  private getAuthData() {\r\n    const token = localStorage.getItem(\"token\");\r\n    const expirationDate = localStorage.getItem(\"expiration\");\r\n    const userId = localStorage.getItem(\"userId\");\r\n    if (!token || !expirationDate) {\r\n      return;\r\n    }\r\n    return {\r\n      token: token,\r\n      expirationDate: new Date(expirationDate),\r\n      userId: userId,\r\n    };\r\n  }\r\n}\r\n","import {\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpErrorResponse\r\n} from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\n\r\nimport { catchError } from \"rxjs/operators\";\r\nimport { throwError } from \"rxjs\";\r\nimport { ErrorComponent } from \"./error/error.component\";\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  constructor(private dialog: MatDialog) {}\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    return next.handle(req).pipe(\r\n      catchError((error: HttpErrorResponse) => {\r\n        let errorMessage = \"An unkown error occured!!\";\r\n        if (error.error.message) {\r\n          errorMessage = error.error.message;\r\n        }\r\n        this.dialog.open(ErrorComponent, { data: { message: errorMessage } });\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Component, Inject } from \"@angular/core\";\r\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\n\r\n@Component({\r\n  templateUrl: \"./error.component.html\"\r\n})\r\nexport class ErrorComponent {\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: { message: string }) {}\r\n}\r\n","<h1 mat-card-title>An Error Occured!</h1>\r\n\r\n<div mat-dialog-content>\r\n  <p class=\"mat-body-1\">{{ data.message }}</p>\r\n</div>\r\n<div mat-mat-dialog-actions>\r\n  <button mat-button color=\"warn\" mat-dialog-close>Okay</button>\r\n</div>\r\n","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-footer\",\r\n  templateUrl: \"./footer.component.html\",\r\n  styleUrls: [\"./footer.component.css\"],\r\n})\r\nexport class FooterComponent {}\r\n","<mat-toolbar>\r\n  <p class=\"footer\">Made with ❤️ by Hassan Abbas</p>\r\n</mat-toolbar>\r\n","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\n\r\nimport { AuthService } from \"../auth/auth.service\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\n@Component({\r\n  selector: \"app-header\",\r\n  templateUrl: \"./header.component.html\",\r\n  styleUrls: [\"./header.component.css\"]\r\n})\r\nexport class HeaderComponent implements OnInit, OnDestroy {\r\n  private authListenerSubs: Subscription;\r\n  userIsAuthenticated = false;\r\n  constructor(private authService: AuthService) {}\r\n\r\n  ngOnInit() {\r\n    this.userIsAuthenticated = this.authService.getIsAuth();\r\n    this.authListenerSubs = this.authService\r\n      .getAuthStatusListener()\r\n      .subscribe(isAuthenticated => {\r\n        this.userIsAuthenticated = isAuthenticated;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.authListenerSubs.unsubscribe();\r\n  }\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n  <span><a routerLink=\"/\">Posts</a></span>\r\n  <span class=\"spacer\"></span>\r\n  <ul>\r\n    <li *ngIf=\"userIsAuthenticated\">\r\n      <a mat-button routerLink=\"/create\" routerLinkActive=\"mat-accent\"\r\n        >New Post</a\r\n      >\r\n    </li>\r\n\r\n    <li *ngIf=\"!userIsAuthenticated\">\r\n      <a mat-button routerLink=\"/auth/login\" routerLinkActive=\"mat-accent\"\r\n        >Login</a\r\n      >\r\n    </li>\r\n\r\n    <li *ngIf=\"!userIsAuthenticated\">\r\n      <a mat-button routerLink=\"/auth/signup\" routerLinkActive=\"mat-accent\"\r\n        >Signup</a\r\n      >\r\n    </li>\r\n\r\n    <li *ngIf=\"userIsAuthenticated\">\r\n      <button mat-button (click)=\"logout()\">Logout</button>\r\n    </li>\r\n  </ul>\r\n</mat-toolbar>\r\n","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-not-found\",\r\n  templateUrl: \"./not-found.component.html\",\r\n  styleUrls: [\"./not-found.component.css\"],\r\n})\r\nexport class NotFoundComponent {}\r\n","<img class=\"center\" src=\"./assets/notfound.jpg\" alt=\"404\" />\r\n\r\n<div class=\"home\">\r\n  <p>You might wanna go to the <a routerLink=\"/\">home</a> page</p>\r\n</div>\r\n","import { AbstractControl } from \"@angular/forms\";\r\nimport { Observable, Observer, of } from \"rxjs\";\r\n\r\nexport const mimeType = (\r\n  control: AbstractControl\r\n): Promise<{ [key: string]: any }> | Observable<{ [key: string]: any }> => {\r\n  if (typeof control.value === \"string\") {\r\n    return of(null);\r\n  }\r\n  const file = control.value as File;\r\n  const fileReader = new FileReader();\r\n  const frObs = Observable.create(\r\n    (observer: Observer<{ [key: string]: any }>) => {\r\n      fileReader.addEventListener(\"loadend\", () => {\r\n        const arr = new Uint8Array(fileReader.result as ArrayBuffer).subarray(\r\n          0,\r\n          4\r\n        );\r\n        let header = \"\";\r\n        let isValid = false;\r\n\r\n        for (let i = 0; i < arr.length; i++) {\r\n          header += arr[i].toString(16);\r\n        }\r\n\r\n        switch (header) {\r\n          case \"89504e47\":\r\n            isValid = true;\r\n            break;\r\n          case \"ffd8ffe0\":\r\n          case \"ffd8ffe1\":\r\n          case \"ffd8ffe2\":\r\n          case \"ffd8ffe3\":\r\n          case \"ffd8ffe8\":\r\n            isValid = true;\r\n            break;\r\n          default:\r\n            isValid = false;\r\n            break;\r\n        }\r\n        if (isValid) {\r\n          observer.next(null);\r\n        } else {\r\n          observer.next({ invalidMimeType: true });\r\n        }\r\n        observer.complete();\r\n      });\r\n      fileReader.readAsArrayBuffer(file);\r\n    }\r\n  );\r\n\r\n  return frObs;\r\n};\r\n","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute, ParamMap } from \"@angular/router\";\r\n\r\nimport { PostService } from \"../post.service\";\r\nimport { Post } from \"../post.model\";\r\nimport { mimeType } from \"./mime-type.validator\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { AuthService } from \"src/app/auth/auth.service\";\r\n\r\n@Component({\r\n  selector: \"app-post-create\",\r\n  templateUrl: \"./post-create.component.html\",\r\n  styleUrls: [\"./post-create.component.css\"],\r\n})\r\nexport class PostCreateComponent implements OnInit, OnDestroy {\r\n  private mode = \"create\";\r\n  private postId: string;\r\n  singlePost: Post;\r\n  isLoading = false;\r\n\r\n  private authStatusSub: Subscription;\r\n\r\n  form: FormGroup;\r\n  imagePreview: string;\r\n\r\n  constructor(\r\n    public postsService: PostService,\r\n    public route: ActivatedRoute,\r\n    public authService: AuthService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.authStatusSub = this.authService\r\n      .getAuthStatusListener()\r\n      .subscribe((authStatus) => {\r\n        this.isLoading = false;\r\n      });\r\n    this.form = new FormGroup({\r\n      title: new FormControl(null, {\r\n        validators: [Validators.required, Validators.minLength(3)],\r\n      }),\r\n      content: new FormControl(null, {\r\n        validators: [Validators.required],\r\n      }),\r\n      price: new FormControl(null, {\r\n        validators: [Validators.required],\r\n      }),\r\n      image: new FormControl(null, {\r\n        validators: [Validators.required],\r\n        asyncValidators: [mimeType],\r\n      }),\r\n    });\r\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\r\n      if (paramMap.has(\"postId\")) {\r\n        this.mode = \"edit\";\r\n        this.postId = paramMap.get(\"postId\");\r\n        this.isLoading = true;\r\n        this.postsService.getPost(this.postId).subscribe((postData) => {\r\n          this.isLoading = false;\r\n          this.singlePost = {\r\n            id: postData._id,\r\n            title: postData.title,\r\n            content: postData.content,\r\n            price: postData.price,\r\n            imagePath: postData.imagePath,\r\n            creatorId: postData.creatorId,\r\n            creatorName: postData.creatorName,\r\n            date: postData.date,\r\n          };\r\n          this.form.setValue({\r\n            title: this.singlePost.title,\r\n            content: this.singlePost.content,\r\n            price: this.singlePost.price,\r\n            image: this.singlePost.imagePath,\r\n          });\r\n        });\r\n      } else {\r\n        this.mode = \"create\";\r\n        this.postId = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  onSavePost() {\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n    this.isLoading = true;\r\n    if (this.mode === \"create\") {\r\n      // sending the title and content to the addPost method in post.service.ts\r\n      this.postsService.addPost(\r\n        this.form.value.title,\r\n        this.form.value.content,\r\n        this.form.value.price,\r\n        this.form.value.image\r\n      );\r\n    } else {\r\n      this.postsService.updatePost(\r\n        this.postId,\r\n        this.form.value.title,\r\n        this.form.value.content,\r\n        this.form.value.price,\r\n        this.form.value.image\r\n      );\r\n    }\r\n    this.form.reset();\r\n  }\r\n\r\n  onImagePicked(event) {\r\n    const file = (event.target as HTMLInputElement).files[0];\r\n    this.form.patchValue({ image: file });\r\n    this.form.get(\"image\").updateValueAndValidity();\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      this.imagePreview = reader.result as string;\r\n    };\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <mat-card>\r\n    <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n    <form [formGroup]=\"form\" (submit)=\"onSavePost()\" *ngIf=\"!isLoading\">\r\n      <mat-form-field>\r\n        <input\r\n          matInput\r\n          type=\"text\"\r\n          formControlName=\"title\"\r\n          placeholder=\"Post title\"\r\n        />\r\n        <mat-error *ngIf=\"form.get('title').invalid\"\r\n          >Please enter a post title</mat-error\r\n        >\r\n      </mat-form-field>\r\n\r\n      <div>\r\n        <button\r\n          mat-stroked-button\r\n          type=\"button\"\r\n          (click)=\"filePicker.click()\"\r\n          multiple\r\n        >\r\n          Pick an image\r\n        </button>\r\n        <input\r\n          type=\"file\"\r\n          multiple\r\n          #filePicker\r\n          (change)=\"onImagePicked($event)\"\r\n        />\r\n      </div>\r\n\r\n      <div\r\n        class=\"image-preview\"\r\n        *ngIf=\"imagePreview !== '' && imagePreview && form.get('image').valid\"\r\n      >\r\n        <img [src]=\"imagePreview\" [alt]=\"form.value.title\" />\r\n      </div>\r\n\r\n      <mat-form-field>\r\n        <input\r\n          matInput\r\n          type=\"number\"\r\n          formControlName=\"price\"\r\n          placeholder=\"Price\"\r\n          step=\"1000\"\r\n        />\r\n        <mat-hint align=\"start\"><strong>Prices in LBP</strong> </mat-hint>\r\n        <mat-error *ngIf=\"form.get('price').invalid\"\r\n          >Please enter a price</mat-error\r\n        >\r\n      </mat-form-field>\r\n\r\n      <mat-form-field>\r\n        <textarea\r\n          matInput\r\n          formControlName=\"content\"\r\n          placeholder=\"Post content\"\r\n          rows=\"6\"\r\n          cols=\"30\"\r\n          wrap=\"hard\"\r\n        ></textarea>\r\n        <mat-error *ngIf=\"form.get('content').invalid\"\r\n          >Please enter a post content</mat-error\r\n        >\r\n      </mat-form-field>\r\n\r\n      <button\r\n        mat-raised-button\r\n        color=\"primary\"\r\n        type=\"submit\"\r\n        [disabled]=\"form.invalid\"\r\n      >\r\n        Save post\r\n      </button>\r\n    </form>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { AuthService } from \"src/app/auth/auth.service\";\r\nimport { PostService } from \"../post.service\";\r\nimport { Router, ActivatedRoute, ParamMap } from \"@angular/router\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { Post } from \"../post.model\";\r\n\r\n@Component({\r\n  selector: \"app-post-details\",\r\n  templateUrl: \"./post-details.component.html\",\r\n  styleUrls: [\"./post-details.component.css\"],\r\n})\r\nexport class PostDetailsComponent implements OnInit, OnDestroy {\r\n  singlePost: Post;\r\n  private postId: string;\r\n\r\n  isLoading = false;\r\n  userIsAuthenticated = false;\r\n  userId: string;\r\n\r\n  isFavorite: boolean;\r\n\r\n  private authStatusSub: Subscription;\r\n  private favPostsSub: Subscription;\r\n\r\n  constructor(\r\n    public postsService: PostService,\r\n    public authService: AuthService,\r\n    public route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\r\n      if (paramMap.has(\"postId\")) {\r\n        this.postId = paramMap.get(\"postId\");\r\n        this.isLoading = true;\r\n        this.postsService.getPost(this.postId).subscribe((postData) => {\r\n          this.isLoading = false;\r\n          this.singlePost = {\r\n            id: postData._id,\r\n            title: postData.title,\r\n            content: postData.content,\r\n            price: postData.price,\r\n            imagePath: postData.imagePath,\r\n            creatorId: postData.creatorId,\r\n            creatorName: postData.creatorName,\r\n            date: postData.date,\r\n          };\r\n        });\r\n      }\r\n    });\r\n\r\n    this.userId = this.authService.getUserId();\r\n    this.userIsAuthenticated = this.authService.getIsAuth();\r\n    this.authStatusSub = this.authService\r\n      .getAuthStatusListener()\r\n      .subscribe((isAuthenticated) => {\r\n        this.userIsAuthenticated = isAuthenticated;\r\n        this.userId = this.authService.getUserId();\r\n      });\r\n\r\n    this.favPostsSub = this.postsService\r\n      .getFavoriteChangedListener()\r\n      .subscribe((isFav) => {\r\n        this.isFavorite = isFav;\r\n        console.log(this.isFavorite);\r\n      });\r\n  }\r\n\r\n  onDelete(postId: string) {\r\n    this.isLoading = true;\r\n    this.postsService.deletePost(postId).subscribe(\r\n      () => {\r\n        this.router.navigate([\"/\"]);\r\n      },\r\n      () => {\r\n        this.isLoading = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  onFavorite(postId: string) {\r\n    if (this.isFavorite) {\r\n      this.isFavorite = false;\r\n    } else {\r\n      this.isFavorite = true;\r\n    }\r\n    this.postsService.addToFavorite(postId, this.isFavorite);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.authStatusSub.unsubscribe;\r\n    this.favPostsSub.unsubscribe;\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n  <mat-card class=\"post-card\" *ngIf=\"!isLoading && singlePost\">\r\n    <mat-card-header>\r\n      <!-- <div mat-card-avatar class=\"post-header-image\"></div> -->\r\n      <mat-card-title>{{ singlePost.title }}</mat-card-title>\r\n      <mat-card-subtitle\r\n        >Posted by: {{ singlePost.creatorName }}\r\n      </mat-card-subtitle>\r\n      <mat-card-subtitle> {{ singlePost.date }} </mat-card-subtitle>\r\n    </mat-card-header>\r\n    <div>\r\n      <img\r\n        class=\"post-image\"\r\n        mat-card-image\r\n        [src]=\"singlePost.imagePath\"\r\n        [alt]=\"singlePost.title\"\r\n      />\r\n    </div>\r\n    <mat-card-content>\r\n      <div>\r\n        <p class=\"post-price\">\r\n          Price:\r\n          {{ singlePost.price }} LBP\r\n        </p>\r\n        <hr />\r\n        <p class=\"post-content\">{{ singlePost.content }}</p>\r\n      </div>\r\n    </mat-card-content>\r\n\r\n    <mat-card-actions\r\n      *ngIf=\"userIsAuthenticated && userId == singlePost.creatorId\"\r\n    >\r\n      <div class=\"post-btn\">\r\n        <a\r\n          mat-stroked-button\r\n          color=\"primary\"\r\n          [routerLink]=\"['/edit', singlePost.id]\"\r\n          >Edit</a\r\n        >\r\n        <button\r\n          mat-stroked-button\r\n          color=\"warn\"\r\n          (click)=\"onDelete(singlePost.id)\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { PageEvent } from \"@angular/material/paginator\";\r\n\r\nimport { Subscription } from \"rxjs\";\r\n\r\nimport { Post } from \"../post.model\";\r\nimport { PostService } from \"../post.service\";\r\nimport { AuthService } from \"src/app/auth/auth.service\";\r\n\r\n@Component({\r\n  selector: \"app-post-list\",\r\n  templateUrl: \"./post-list.component.html\",\r\n  styleUrls: [\"./post-list.component.css\"],\r\n})\r\nexport class PostListComponent implements OnInit, OnDestroy {\r\n  posts: Post[] = [];\r\n\r\n  private postsSub: Subscription;\r\n\r\n  isLoading = false;\r\n\r\n  isFavorite = false;\r\n  favToolTip = \"Add to favorites\";\r\n\r\n  // for pagination\r\n  totalPosts = 0;\r\n  postsPerPage = 4;\r\n  currentPage = 1;\r\n  pageSizeOptions = [2, 4, 6, 10];\r\n\r\n  constructor(\r\n    public postsService: PostService,\r\n    public authService: AuthService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.isLoading = true;\r\n    this.postsService.getPosts(this.postsPerPage, this.currentPage);\r\n    this.postsSub = this.postsService\r\n      .getPostUpdateListener()\r\n      .subscribe((postData: { posts: Post[]; postCount: number }) => {\r\n        this.isLoading = false;\r\n        this.posts = postData.posts;\r\n        this.totalPosts = postData.postCount;\r\n      });\r\n  }\r\n\r\n  onChangedPage(pageData: PageEvent) {\r\n    this.isLoading = true;\r\n    this.currentPage = pageData.pageIndex + 1;\r\n    this.postsPerPage = pageData.pageSize;\r\n    this.postsService.getPosts(this.postsPerPage, this.currentPage);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.postsSub.unsubscribe;\r\n  }\r\n}\r\n","<app-search></app-search>\r\n\r\n<mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n<div class=\"container\" *ngIf=\"posts.length > 0 && !isLoading\">\r\n  <mat-card class=\"post-card\" *ngFor=\"let post of posts\">\r\n    <mat-card-header>\r\n      <mat-card-title class=\"card-title\">{{ post.title }}</mat-card-title>\r\n      <mat-card-subtitle class=\"card-subtitle\"\r\n        >Posted by: {{ post.creatorName }} <br />\r\n        {{ post.date }}\r\n      </mat-card-subtitle>\r\n    </mat-card-header>\r\n    <img\r\n      class=\"post-image img\"\r\n      mat-card-image\r\n      [src]=\"post.imagePath\"\r\n      [alt]=\"post.title\"\r\n    />\r\n    <mat-card-content>\r\n      <!-- <p>\r\n          {{ post.content }}\r\n        </p> -->\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <div class=\"details-btn\">\r\n        <a mat-button color=\"primary\" [routerLink]=\"['/post-details', post.id]\">\r\n          More details\r\n        </a>\r\n      </div>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n</div>\r\n\r\n<mat-paginator\r\n  [length]=\"totalPosts\"\r\n  [pageSize]=\"postsPerPage\"\r\n  [pageSizeOptions]=\"pageSizeOptions\"\r\n  (page)=\"onChangedPage($event)\"\r\n  *ngIf=\"posts.length > 0\"\r\n></mat-paginator>\r\n\r\n<p class=\"info-text mat-body-2\" *ngIf=\"posts.length <= 0 && !isLoading\">\r\n  No posts added yet!\r\n</p>\r\n\r\n<!-- <app-footer></app-footer> -->\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Router } from \"@angular/router\";\r\n\r\nimport { Post } from \"./post.model\";\r\n\r\nimport { Subject } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\nimport { environment } from \"../../environments/environment\";\r\n\r\nconst BACKEND_URL = environment.apiUrl + \"/posts/\";\r\n\r\n@Injectable({ providedIn: \"root\" })\r\n// handling all the posts services in a class and exporting it\r\nexport class PostService {\r\n  // creating an array of type Post (interface)\r\n  private posts: Post[] = [];\r\n  private postsUpdated = new Subject<{ posts: Post[]; postCount: number }>();\r\n\r\n  private isFav: boolean;\r\n  private favoriteChanged = new Subject<boolean>();\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  // getting all the posts from the API\r\n  getPosts(postsPerPage: number, currentPage: number) {\r\n    const queryParams = `?pagesize=${postsPerPage}&page=${currentPage}`;\r\n    this.http\r\n      .get<{ message: string; posts: any; maxPosts: number }>(\r\n        BACKEND_URL + queryParams\r\n      )\r\n      .pipe(\r\n        map((postData) => {\r\n          return {\r\n            posts: postData.posts.map((post) => {\r\n              return {\r\n                title: post.title,\r\n                content: post.content,\r\n                price: post.price,\r\n                id: post._id,\r\n                imagePath: post.imagePath,\r\n                creator: post.creator,\r\n                creatorName: post.creator.name,\r\n                date: new Date(post.createdAt).toLocaleDateString(\"en-US\"),\r\n              };\r\n            }),\r\n            maxPosts: postData.maxPosts,\r\n          };\r\n        })\r\n      )\r\n      // transformedposts is the returned value of the pipe.. we tranformed it to get the id\r\n      .subscribe((transformedPostData) => {\r\n        this.posts = transformedPostData.posts;\r\n        this.postsUpdated.next({\r\n          posts: [...this.posts],\r\n          postCount: transformedPostData.maxPosts,\r\n        });\r\n      });\r\n  }\r\n\r\n  getPostUpdateListener() {\r\n    return this.postsUpdated.asObservable();\r\n  }\r\n\r\n  getPost(id: string) {\r\n    /* this will return the observable we're getting from the httpClient\r\n    so we can subscribe in the component */\r\n    return this.http.get<{\r\n      _id: string;\r\n      title: string;\r\n      content: string;\r\n      price: number;\r\n      imagePath: string;\r\n      creatorId: string;\r\n      creatorName: string;\r\n      date: Date;\r\n    }>(BACKEND_URL + id);\r\n  }\r\n\r\n  addPost(title: string, content: string, price: any, image: File) {\r\n    const postData = new FormData();\r\n    postData.append(\"title\", title);\r\n    postData.append(\"content\", content);\r\n    postData.append(\"price\", price);\r\n    postData.append(\"image\", image, title);\r\n    // sending a POST request to app.js\r\n    this.http\r\n      .post<{ message: string; post: Post }>(BACKEND_URL, postData)\r\n      .subscribe((responseData) => {\r\n        this.router.navigate([\"/\"]);\r\n      });\r\n  }\r\n\r\n  deletePost(postId: string) {\r\n    // we are returning as an Observable and then we can subscribe in the post-list comp\r\n    return this.http.delete(BACKEND_URL + postId);\r\n  }\r\n\r\n  addToFavorite(postId: string, isFavorite: boolean) {\r\n    const data = {\r\n      isFavorite: isFavorite,\r\n    };\r\n    console.log(data);\r\n    this.http\r\n      .patch<{ message: string; isFav: boolean }>(BACKEND_URL + postId, data)\r\n      .subscribe(\r\n        (response) => {\r\n          this.isFav = response.isFav;\r\n          this.favoriteChanged.next(this.isFav);\r\n          this.router.navigate([`/post-details/${postId}`]);\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  }\r\n  getFavoriteChangedListener() {\r\n    return this.favoriteChanged.asObservable();\r\n  }\r\n\r\n  updatePost(\r\n    id: string,\r\n    title: string,\r\n    content: string,\r\n    price: any,\r\n    image: File | string\r\n  ) {\r\n    let postData: Post | FormData;\r\n    if (typeof image === \"object\") {\r\n      postData = new FormData();\r\n      postData.append(\"id\", id);\r\n      postData.append(\"title\", title);\r\n      postData.append(\"content\", content);\r\n      postData.append(\"price\", price);\r\n      postData.append(\"image\", image, title);\r\n    } else {\r\n      postData = {\r\n        id: id,\r\n        title: title,\r\n        content: content,\r\n        price: price,\r\n        imagePath: image,\r\n        creatorId: null,\r\n        creatorName: null,\r\n        date: null,\r\n      };\r\n    }\r\n    this.http.put(BACKEND_URL + id, postData).subscribe((response) => {\r\n      this.router.navigate([`/post-details/${id}`]);\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { AngularMaterialModule } from \"../angular-material.module\";\r\n\r\nimport { PostListComponent } from \"./post-list/post-list.component\";\r\nimport { PostCreateComponent } from \"./post-create/post-create.component\";\r\nimport { PostDetailsComponent } from \"./post-details/post-details.component\";\r\nimport { FooterComponent } from \"../footer/footer.component\";\r\nimport { SearchComponent } from \"../search/search.component\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PostCreateComponent,\r\n    PostListComponent,\r\n    PostDetailsComponent,\r\n    FooterComponent,\r\n    SearchComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AngularMaterialModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n  ],\r\n})\r\nexport class PostsModule {}\r\n","import { Component } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: \"app-search\",\r\n  templateUrl: \"./search.component.html\",\r\n  styleUrls: [\"./search.component.css\"],\r\n})\r\nexport class SearchComponent {\r\n  onLogin(form: NgForm) {}\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: \"http://localhost:3000/api\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}